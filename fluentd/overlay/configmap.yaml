apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: kube-system
data:
  fluent.conf: |
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kube.*
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$/
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%N%:z
      </parse>
    </source>

       # ‚≠ê EXCLUDE FLUENTD'S OWN LOGS 
    <match kube.var.log.containers.fluentd-**>
      @type null
    </match>


    # Add Kubernetes metadata
    <filter kube.**>
      @type kubernetes_metadata
    </filter>

     # Parse apache access logs for WordPress namespace
    <filter kube.var.log.containers.**wordpress**.log>
      @type parser
      key_name message
      reserve_data true
      reserve_time true
      emit_invalid_record_to_error false
      <parse>
        @type regexp
        expression /^(?<remote_addr>[^ ]+) - (?<remote_user>[^ ]+) \[(?<time_local>[^\]]+)\] "(?<method>[A-Z]+) (?<path>[^ ]+) (?<protocol>[^"]+)" (?<status_code>\d+) (?<body_bytes_sent>\d+) "(?<http_referer>[^"]*)" "(?<http_user_agent>[^"]*)" (?<response_time_us>\d+)$/
        types status_code:integer,body_bytes_sent:integer,response_time_us:integer
      </parse>
    </filter>

    # Add a record to indicate config version and reloader test
    <filter kube.**>
      @type record_transformer
      <record>
        reloader_test "CONFIG_RELOADED_SUCCESSFULLY"
        config_version "v2.0"
      </record>
    </filter>

    # Test source - will appear with tag "test.reload"
    <source>
      @type exec
      tag test.reload
      command echo '{"message":"FLUENTD CONFIG RELOADED TEST 2 SUCCESSFUL", "timestamp":"'$(date -Iseconds)'"}'
      run_interval 10s
      <parse>
        @type json
      </parse>
    </source>

    # Match the test.reload messages
    <match test.reload>
      @type elasticsearch
      host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
      port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
      scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME']}"
      user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
      password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
      ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY']}"
      logstash_format true
      logstash_prefix fluentd-test
      include_tag_key true
      type_name _doc
    </match>

    # Send logs to Elasticsearch
    <match kube.**>
      @type elasticsearch
      host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
      port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
      scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME']}"
      user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
      password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
      ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY']}"
      logstash_format  true
      logstash_prefix fluentd
      include_tag_key true
      pipeline add_namespace_field
      type_name _doc

    </match>
