apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: kube-system
data:
  fluent.conf: |
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kube.*
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$/
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%N%:z
      </parse>
    </source>

    # Add Kubernetes metadata
    <filter kube.**>
      @type kubernetes_metadata
    </filter>

     # Parse Nginx access logs for WordPress namespace
    <filter kube.var.log.containers.**wordpress**.log>
      @type parser
      key_name message
      reserve_data true
      <parse>
        @type regexp
        expression /^(?<remote_addr>[^ ]*) [^ ]* (?<remote_user>[^ ]*) \[(?<time_local>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<status_code>\d+) (?<body_bytes_sent>[^ ]*)(?: "(?<http_referer>[^\"]*)" "(?<http_user_agent>[^\"]*)")?/
      </parse>
    </filter>

    # Send logs to Elasticsearch
    <match kube.**>
      @type elasticsearch
      host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
      port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
      scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME']}"
      user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
      password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
      ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY']}"
      logstash_format true
      logstash_prefix fluentd
      include_tag_key true
      type_name _doc
    </match>
