# eck-operator/base/cleanup-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eck-cleanup
  namespace: elastic-system
  annotations:
    argocd.argoproj.io/hook: PreDelete
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eck-cleanup-role
  annotations:
    argocd.argoproj.io/hook: PreDelete
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
rules:
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["get", "list", "delete", "patch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "delete", "patch"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eck-cleanup-binding
  annotations:
    argocd.argoproj.io/hook: PreDelete
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eck-cleanup-role
subjects:
- kind: ServiceAccount
  name: eck-cleanup
  namespace: elastic-system
---
apiVersion: batch/v1
kind: Job
metadata:
  name: eck-predelete-cleanup
  namespace: elastic-system
  annotations:
    argocd.argoproj.io/hook: PreDelete
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  ttlSecondsAfterFinished: 60
  template:
    spec:
      serviceAccountName: eck-cleanup
      restartPolicy: Never
      containers:
      - name: cleanup
        image: bitnami/kubectl:latest
        command:
        - sh
        - -c
        - |
          echo "Cleaning up ECK webhooks..."
          kubectl delete validatingwebhookconfigurations -l control-plane=elastic-operator --ignore-not-found=true
          kubectl delete mutatingwebhookconfigurations -l control-plane=elastic-operator --ignore-not-found=true
          
          echo "Cleaning up ECK CRDs..."
          kubectl get crd | grep elastic.co | awk '{print $1}' | xargs -r kubectl delete crd --ignore-not-found=true
          
          echo "Cleanup complete!"